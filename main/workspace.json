{
  "configuration" : { },
  "description" : "Description",
  "documentation" : {
    "decisions" : [ {
      "content" : "# 1. Record architecture decisions\n\nDate: 2024-07-08\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to record the architectural decisions made on this project.\n\n## Decision\n\nWe will use Architecture Decision Records, as [described by Michael Nygard](http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions).\n\nAnd we recommend them via our [Architecture Principles](https://madetech.github.io/architecture-handbook/principles/communicate_into_the_future.html)\n\n## Consequences\n\nSee Michael Nygard's article, linked above. For a lightweight ADR toolset, see Nat Pryce's [adr-tools](https://github.com/npryce/adr-tools).\n",
      "date" : "2024-07-08T00:00:00Z",
      "format" : "Markdown",
      "id" : "1",
      "status" : "Accepted",
      "title" : "Record architecture decisions"
    }, {
      "content" : "# 2. Hosting Alpha Prototype\n\nDate: 2024-07-16\n\n## Status\n\nAccepted\n\n## Context\n\nOver the course of this project, we will require a prototype for user research. Participants will need to access the prototype over the internet. The prototype requires some backend compute so cannot be hosted as a static site. \n\nIn an ideal world, we would host this on existing DCMS infrastructure, such as using Cloud Run in GCP. This is not an option.\n\n## Options\n\n### Supplier Prototyping AWS Account\n\nThe supplier uses one of their existing AWS accounts to host the prototype. This muddies the water on ownership of the prototype after the end of the project, but does have the benefit of existing controls on the account. \n\n### New Heroku Account\n\nWe create a new Heroku account and team for the prototype, that exists for the duration of the project. The main drawback is that we create an IT asset owned by DCMS without many controls.\n\n## Decision\n\nWe're going to use Heroku as this leaves the most control in the hands of DCMS and the risk level of this asset is very low. \n\n## Consequences\n\nAt the end of the alpha stage, DCMS will need to find a new hosting solution if they still with the prototype to be hosted.\n",
      "date" : "2024-07-16T00:00:00Z",
      "format" : "Markdown",
      "id" : "2",
      "status" : "Accepted",
      "title" : "Hosting Alpha Prototype"
    }, {
      "content" : "# Register Adapter\nDate: 2024-09-10\n\n## Status\n\nProposed\n\n## Context\n\nIt feels very likely at some point that this component will be required, when more applications are trying to access the register. This ADR is only about whether this component is required immediately, when there is only a single monolithic application accessing it.\n\n## Options\n\n### Register Adapter Component (separate deployable)\n\nPros:\n- Future proofing for when multiple deployables want to access the register\n- Able to deploy register adapter in private network, provides another layer of safety for attacks to navigate\n- Provides an extra level of control around the register\nCons:\n- Leads to lockstep development/deployments which can lead to substantial increases in development time\n- Adds an extra network hop which can increase the complexity of running the service\n\n### Register Adapter Module (module as part of monlith)\nEffectively just a lightweight version of the separate deployable, offering less of the benefits and less of the disadvantages. It requires a fair amount of discipline to complete this perfectly.\n\n## Recommendation\n\nIt is an established pattern to take a module and extract it into a separate deployable. In this case, in order to get the service live as quickly as possible, the register adapter should probably start as a module (maybe following the [ports and adapters pattern](https://8thlight.com/insights/a-color-coded-guide-to-ports-and-adapters)) to benefit from the speed and simplicity while the service is new, and extract the component when it is necessary.\n",
      "date" : "2024-09-10T00:00:00Z",
      "format" : "Markdown",
      "id" : "3",
      "status" : "Proposed",
      "title" : " Register Adapter"
    }, {
      "content" : "# Geographically identifying units\nDate: 2024-09-11\n\n## Status\n\nProposed\n\n## Context\n\nOne of our riskiest assumptions in this alpha is \"We assume that we will be able to technically capture all types of STL (e.g. using unique geographic location)\". It is important for us to capture geographic location of short-term lets:\n1. To be able to determine the number of short-term lets in an area (all of these options will be combined with an address, so we won't consider this too heavily in this ADR)\n2. To help us ensure that short term lets are not double counted and improve data quality (although the registration fee would likely discourage double registration)\n3. To determine if a registration number matches a particular short-term let\n\nUnlike other types of rental property in England, short-term lets do not match uniquely to UPRNs or addresses:\n- Parts of a property let separately (e.g. individual rooms or a basement and an outhouse)\n- Yurts let separately in a single field at one address\n\nIt is also important that whatever method we choose can be used with an offline journey, and without JavaScript in the online journey.\n\nShort-term lets that occupy all of an address would not be required to supply more detail. Short-term lets that do not occupy all of an address but are the only short-term let on site would probably not be required to supply more detail. \n\n## Options\n\nOptions to be evaluated on:\n1. How easy it is to use the data to de-duplicate registrations?\n2. How easy it is to use the data to find a short-term let?\n3. How easy it is to use the data to determine if a registration matches a particular short-term let at an address?\n4. How easy it is to for the operator to provide?\n5. How easy it is to for the operator to provide without JavaScript?\n6. How easy it is to for the operator to provide offline?\n7. How easy it is to for the operator to provide for multiple properties?\n\n\n### Text description\n\nOperators provide a text description of whatever section of an address is part of the short-term let.\n\n1. How easy it is to use the data to de-duplicate registrations?\n   - Difficult. Depending on the guidance, the description provided might be vague, or change over time (the marketing name of a yurt) \n2. How easy it is to use the data to find a short-term let?\n   - Difficult. Depending on the guidance, the description provided might be vague, or change over time (the marketing name of a yurt) \n3. How easy it is to use the data to determine if a registration matches a particular short-term let at an address?\n   - Difficult. Depending on the guidance, the description provided might be vague, or change over time (the marketing name of a yurt) \n4. How easy it is to for the operator to provide?\n   - Easy. \n5. How easy it is to for the operator to provide without JavaScript?\n   - Easy. \n6. How easy it is to for the operator to provide offline?\n   - Easy. \n7. How easy it is to for the operator to provide for multiple properties?\n   - Easy. \n\n\n### GPS coordinates\n\nOperators coordinates of the location of the short-term let. Could be Ordnance Survey Eastings and Northings.\n\n1. How easy it is to use the data to de-duplicate registrations?\n   - Not easy, it would be hard to balance what GPS coordinates are the close enough to be called the same without also de-deduplicating legitimately different lets. \n2. How easy it is to use the data to find a short-term let?\n   - Easy for working across large areas like a field, but difficult/impossible across smaller areas like rooms in a house, particularly where one short-term let is directly above another.\n3. How easy it is to use the data to determine if a registration matches a particular short-term let at an address?\n   - Easy for working across large areas like a field, but difficult/impossible across smaller areas like rooms in a house, particularly where one short-term let is directly above another.\n4. How easy it is to for the operator to provide?\n   - Easy. An operator can pick a location on a map.\n5. How easy it is to for the operator to provide without JavaScript?\n   - Difficult, operator needs to find coordinates to input directly.\n6. How easy it is to for the operator to provide offline?\n   - Difficult, operator needs to find coordinates to input directly.\n7. How easy it is to for the operator to provide for multiple properties?\n   - Not too difficult, but does require knowledge of the individual let.\n\n### Drawn Sections\n\nOperators draw the boundaries of the short-term let on a map. This could be provided digitally online with javascript. Offline or without Javascript, the user would probably have to mark the area on a physical map to be digitised by an administrator. This would be very similar to the data that is being kept in [planning.data.gov.uk](https://www.planning.data.gov.uk/map/).\n\n1. How easy it is to use the data to de-duplicate registrations?\n   - Not easy, it would be hard to balance what boundaries lines are close enough to be called the same without also de-deduplicating legitimately different lets. \n2. How easy it is to use the data to find a short-term let?\n   - Easy for working across large areas like a field, simple-ish across smaller areas like rooms in a house, doesn't solve where one short-term let is directly above another.\n3. How easy it is to use the data to determine if a registration matches a particular short-term let at an address?\n   - Easy for working across large areas like a field, simple-ish across smaller areas like rooms in a house, doesn't solve where one short-term let is directly above another.\n4. How easy it is to for the operator to provide?\n   - Easy. An operator can mark a location on a map.\n5. How easy it is to for the operator to provide without JavaScript?\n   - Difficult, operator needs print and mark on a map on paper and then scan in. This would then need digitising by an administrator.\n6. How easy it is to for the operator to provide offline?\n   - Difficult, operator needs print and mark on a map on paper. This would then need digitising by an administrator.\n7. How easy it is to for the operator to provide for multiple properties?\n   - Difficult, would require fairly substantial knowledge of the individual let.\n\n## Recommendation\n\nOur current first choice is text description with an optional site plan to help. We would need to provide guidance to help make the service as useful as possible. This idea will need some additional testing.\n",
      "date" : "2024-09-11T00:00:00Z",
      "format" : "Markdown",
      "id" : "4",
      "status" : "Proposed",
      "title" : " Geographically identifying units"
    }, {
      "content" : "# 5. Use Cloud Run and Containers for compute\n\nDate: 2024-09-30\n\n## Status\n\nAccepted\n\n## Context\n\nIt is probable that the service will need to change cloud provider at some point in its live, possibly relatively soon. The service will also experience large fluctuations in load. \n\n## Decision\n\nBuild the service in containers, using Docker. This will allow us to move the service more easily to a different cloud provider when required and minimise the complexity of the service. \n\nUse Cloud Run to run the containers. This will allow us to build a service that scales with demand and is a simpler service to manage than Google Kubernetes Engine.\n\n## Consequences\n\n",
      "date" : "2024-09-30T00:00:00Z",
      "format" : "Markdown",
      "id" : "5",
      "status" : "Accepted",
      "title" : "Use Cloud Run and Containers for compute"
    }, {
      "content" : "# 6. Register history\n\nDate: 2024-10-07\n\n## Status\n\nDraft\n\n## Context\n\nWe have identified some use cases for being able to know historic values of data. \n- Protection from tampering\n- Able to review historical data (e.g. previous names)\n- Assurance\n- Reducing fraud\n\n## Options \n\n### Don't do anything\n\nWe're not currently looking for this data to be used as evidence, so we could accept the risk. If the remit of the service changed, we would miss out on any historical data from the beginning of the scheme.\n\n### Store all changes as an audit log\n\nThis would quickly lead to a very large amount of data, with millions of datapoints after a year. Data changed at renewal would contain many different updates to store. This would create an unwieldy dataset. \n\n#### Store audit log changes on a separate platform\n\nBy storing the audit log on a separate platform, we can \"lock down\" access to the audit log, making easier to prevent deletions and tampering, and use a platform that's more appropriate for searching the volume of data. \n\n- PII\n- Can't make single transaction\n\n### Store historical logs for particular fields\n\nThere are probably a limited number of fields in which we are interested in historical data (e.g. name), as such we should minimise the data we store by only storing history on required fields. This would mean we store less data and make that data more usable (e.g. making it easier to serve a previous names component). \n\n### Use an append only database\n\nBriefly summarising [_Building on the steel thread_ from the Digital Service Platforms team in 2015](https://gds.blog.gov.uk/2015/07/24/building-on-the-steel-thread/#a-system-of-record:~:text=the%20bridge%20itself.-,A%20system%20of%20record,-Licence%3A%20Creative), don't just keep a database, store a system of record, storing the data as it changes and updates. A single record will have multiple entries, recording the new value as time passes. Any view shows the most recent entry, but can also show a history.\n\n![Two post-it notes. The first one is labeled \"A register\" and shows a list of enteies with ID numbers. Two of the entries have the same ID number and are marked V1 and V2. This post-it is labeled \"Tamper proof sequence of immutable entries\". The second post-it is labelled \"A record\" and shows the information for the entries with ID number 1234, and the history containing V1 and V2. The second post-it is labeled \"Sequence of entries sharing an identifier\"](https://gds.blog.gov.uk/wp-content/uploads/sites/60/2015/10/22052011555_a491f29854_z.jpg)\n\nThe entries in the database are completely immutable with updates to the data being made through adding additional entries with new version numbers. The integrity of the database is preserved with cryptographic hashes. One example of this would be using [Merkle Trees](https://en.wikipedia.org/wiki/Merkle_tree) as used by the GDS registers project. The aim of this is to increase confidence in the register from the public, that data has not been tampered with. It does not ensure that the data itself is entered correctly. \n\nThis would be a substantial time investment, but would provide a strong level of confidence in the register. \n\n## Decision\n\n## Consequences\n\nIf we store history, we will need to define a sensible retention policy.\n",
      "date" : "2024-10-07T00:00:00Z",
      "format" : "Markdown",
      "id" : "6",
      "status" : "Draft",
      "title" : "Register history"
    } ],
    "sections" : [ {
      "content" : "## Short Term Lets architecture\n\nDocumentation of architecture decisions made over the course of the Short Term Lets Registration Alpha project. \n\nThe project is currently in an alpha stage so decisions here may change before the service is live, and some of the documents are speculative to discuss with user groups.\n",
      "filename" : "01-index.md",
      "format" : "Markdown",
      "order" : 1,
      "title" : ""
    }, {
      "content" : "## Data modelling of let ownership and management\n\nThe ownership and management of Short Term Lets can be a little complicated. It feels like there are three separate roles:\n- The owner of the property (which may be some number of individuals or a company)\n- The manager of the property (which may be some number of individuals or a company)\n- The person registering the short term let (which may be a private individual or a staff member)\n\nIn the simplest case of an individual owner-operator, all three of these groups would be the same one person. This is likely where a beta would start, however:\n- A person or company may own multiple properties (possibly up to hundreds)\n- A person or company may manage multiple properties (possibly up to hundreds)\n- Multiple people or staff members in a company may want to do administration of the same property\n\nIt feels likely that a \"finished\" service would need to handle the following use cases:\n- Adding and removing accounts from a property/group of properties\n- Adding and removing accounts from a company\n- Transferring a property from one account/company to another account/company\n",
      "filename" : "02-data-modelling.md",
      "format" : "Markdown",
      "order" : 2,
      "title" : ""
    }, {
      "content" : "## Solving a whole problem\n\n[Service standard point 2 is \"Solve a whole problem for users\"](https://www.gov.uk/service-manual/service-standard/point-2-solve-a-whole-problem). A whole problem could be:\n\n1. Capture the attention existing and new operators.\n2. Operators register their short term lets. At this point they would verify H&S compliance.\n3. Platforms display the registration number on a listing. Ideally they would also verify the registration.\n4. Officers at Local Authority use register contact details to solve problems in their local area, such as noise complaints.\n5. Planners at Local Authority use data from the register to inform decisions.\n\n![Solving a whole problem for users diagram](embed:wholeProblem)\n\nWithin this problem the technical questions seem to be:\n- At step 3: What mechanism could we offer to verify a Short Term Let registration by the Booking Platforms? What do they already do for existing schemes? What else is available?\n- At step 4: What access to the data would be required? What format should that be in? What are the security considerations?\n- At step 5: What data points are useful? What format should that be in?\n",
      "filename" : "03-a-whole-problem.md",
      "format" : "Markdown",
      "order" : 3,
      "title" : ""
    }, {
      "content" : "## Proposed Architecture\n\n### Container level\n\n![Container level diagram](embed:Containers)\n\n### Component level\n\n![Component level diagram](embed:Components)\n",
      "filename" : "04-proposed-architecture.md",
      "format" : "Markdown",
      "order" : 4,
      "title" : ""
    }, {
      "content" : "## Development practices\n\nThese are suggestions for general development best practices for creating the service.\n\n### Deployment and Releases\n\nThe service should be deployed by a CI/CD pipeline. Deployments should not involve manual steps. This pipeline should not be in the cloud platform, as this would be a tie to a particular cloud platform that may change later, for a small amount of benefit.\n\nThe development team may want to practise Continuous Integration, with each developer merging their code into the main codebase at least once a day. The team should also ideally practise Continuous Deployment, with ready code automatically deployed to the production systems. These practices greatly help with the speed that software can be delivered. Delays that are introduced by asynchronous checks before deployment can be substantial.\n\nTo support these practices, you need robust testing to build confidence that any changes are safe, monitoring to be aware of any problems as early as possible, and feature flags (a technique that allows changes to be made to a codebase without those changes being shown to the user).\n\n### Infrastructure\n\nInfrastructure should be simple as possible and provisioned using an “Infrastructure as Code” tool. These tools make you record the infrastructure that the service is built on in code. This code is read by the tool which then creates the infrastructure. This makes it easier to rebuild the service (from scratch if required) and increases certainty about configuration of systems.\n\nFor Google Cloud Platform, the default is Terraform. Terraform is also a good choice as it supports the case that we need to move the service between cloud providers. Terraform is not tied to a single cloud provider.\n\n### Environments\n\nWe will have a “production” environment that holds the infrastructure for the real service that users visit. We may also want separate environments for:\n\n- Staging: A complete recreation of the production environment in a separate cloud account, where we can try features before enabling them in production.  \n- Build and Deploy: A separate environment that runs the CI/CD pipeline and the infrastructure as code tool. These tools need a lot of access, and by having them in a separate account you can reduce the “blast radius” of any incidents.\n\n### Monitoring and Alerting\n\nThe service should log important events and store those logs, to help with debugging problems in the service.\n\nThe service should record metrics to ensure that the service is operating correctly. These should include metrics about the infrastructure (e.g. how full is the database, how long does the database take to deal with requests), but also metrics about the operation of the service (e.g. how many registrations have been completed).\n\nWe should create alerts for any metrics that would indicate a problem in the system (e.g. no users are completing their journey). We should also alert on anything that looks like an attack (e.g. Denial of Service or Port Scanning).\n\n### Backup and Restore\n\nAny data should be backed up regularly. These backups should be tested regularly. Within our system this will primarily be backups of the database. A decision needs to be made about what frequency of backups should be made and kept.\n\n### Storing Secrets\n\nCredentials for the APIs and other systems that our service uses should be stored outside of source control, in a dedicated service like GCP Secret Manager.\n\n### Dependencies\n\nThe software that we write, will be dependent on 3rd party packages that other bodies provide. The number of dependencies should be minimised as each dependency adds additional security considerations. Before a dependency is added to the project it should be reviewed to ensure it is being actively maintained and is trustworthy.\n\nThese dependencies should be automatically reviewed for vulnerabilities using a tool such as Dependabot. This could be configured to automatically suggest package upgrades where they are available.\n",
      "filename" : "05-development-practices.md",
      "format" : "Markdown",
      "order" : 5,
      "title" : ""
    } ]
  },
  "id" : 0,
  "model" : {
    "people" : [ {
      "description" : "Manages registrations",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Service Administrator",
      "properties" : {
        "structurizr.dsl.identifier" : "admin"
      },
      "relationships" : [ {
        "description" : "Resolve queries about registrations",
        "destinationId" : "17",
        "id" : "32",
        "properties" : {
          "structurizr.dsl.identifier" : "9b8d99e6-45d0-409d-829b-e40a75d947a9"
        },
        "sourceId" : "1",
        "tags" : "Relationship",
        "technology" : "HTTPS"
      }, {
        "description" : "Resolve queries about registrations",
        "destinationId" : "14",
        "id" : "33",
        "linkedRelationshipId" : "32",
        "sourceId" : "1",
        "technology" : "HTTPS"
      }, {
        "description" : "Resolve queries about registrations",
        "destinationId" : "13",
        "id" : "34",
        "linkedRelationshipId" : "32",
        "sourceId" : "1",
        "technology" : "HTTPS"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Owns and runs a short-term let",
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Owner",
      "properties" : {
        "structurizr.dsl.identifier" : "operator"
      },
      "relationships" : [ {
        "description" : "Hire to manage short term let",
        "destinationId" : "3",
        "id" : "22",
        "properties" : {
          "structurizr.dsl.identifier" : "7cca7380-6181-44c6-ad77-b36db3dd2d46"
        },
        "sourceId" : "2",
        "tags" : "Relationship"
      }, {
        "description" : "Lists STL on platform",
        "destinationId" : "6",
        "id" : "23",
        "properties" : {
          "structurizr.dsl.identifier" : "8995d4c2-375c-49c7-956b-5cce2bf3f7d2"
        },
        "sourceId" : "2",
        "tags" : "Relationship"
      }, {
        "description" : "Registers a short term let",
        "destinationId" : "15",
        "id" : "29",
        "properties" : {
          "structurizr.dsl.identifier" : "d1e1f419-ec50-437a-86d8-d6775d17c524"
        },
        "sourceId" : "2",
        "tags" : "Relationship",
        "technology" : "HTTPS"
      }, {
        "description" : "Registers a short term let",
        "destinationId" : "14",
        "id" : "30",
        "linkedRelationshipId" : "29",
        "sourceId" : "2",
        "technology" : "HTTPS"
      }, {
        "description" : "Registers a short term let",
        "destinationId" : "13",
        "id" : "31",
        "linkedRelationshipId" : "29",
        "sourceId" : "2",
        "technology" : "HTTPS"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Runs a short-term let on an owner's behalf",
      "id" : "3",
      "location" : "Unspecified",
      "name" : "Agent",
      "properties" : {
        "structurizr.dsl.identifier" : "managementcompany"
      },
      "relationships" : [ {
        "description" : "Register short term lets on behalf of operator",
        "destinationId" : "13",
        "id" : "24",
        "properties" : {
          "structurizr.dsl.identifier" : "b6592089-2508-4f73-be29-4fb1f4799ac6"
        },
        "sourceId" : "3",
        "tags" : "Relationship"
      }, {
        "description" : "Lists short term let on platform",
        "destinationId" : "6",
        "id" : "25",
        "properties" : {
          "structurizr.dsl.identifier" : "285e9b51-6e74-46c2-ad40-e160c5e390a7"
        },
        "sourceId" : "3",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Plans housing schemes in Local Authority area",
      "group" : "Local Authority",
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Local Authority Planner",
      "properties" : {
        "structurizr.dsl.identifier" : "localauthorityplanner"
      },
      "relationships" : [ {
        "description" : "Retrieve data on short term lets",
        "destinationId" : "13",
        "id" : "27",
        "properties" : {
          "structurizr.dsl.identifier" : "7cdca0a1-175f-4002-b39e-f856b92eb4a5"
        },
        "sourceId" : "4",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Uses register to solve problems in local area",
      "group" : "Local Authority",
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Local Authority Officer",
      "properties" : {
        "structurizr.dsl.identifier" : "localauthorityofficer"
      },
      "relationships" : [ {
        "description" : "Finds contact details from register",
        "destinationId" : "16",
        "id" : "35",
        "properties" : {
          "structurizr.dsl.identifier" : "4ff436ea-4cbc-4b76-8416-4084499b04ef"
        },
        "sourceId" : "5",
        "tags" : "Relationship",
        "technology" : "HTTPS"
      }, {
        "description" : "Finds contact details from register",
        "destinationId" : "14",
        "id" : "36",
        "linkedRelationshipId" : "35",
        "sourceId" : "5",
        "technology" : "HTTPS"
      }, {
        "description" : "Finds contact details from register",
        "destinationId" : "13",
        "id" : "37",
        "linkedRelationshipId" : "35",
        "sourceId" : "5",
        "technology" : "HTTPS"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "description" : "Lists short term lets and facilitates bookings",
      "documentation" : { },
      "id" : "6",
      "location" : "Unspecified",
      "name" : "Booking Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "bookingplatform"
      },
      "relationships" : [ {
        "description" : "Verify registration of short term let",
        "destinationId" : "13",
        "id" : "26",
        "properties" : {
          "structurizr.dsl.identifier" : "83d89e21-b57b-48d8-a0ea-d9fac9a0a937"
        },
        "sourceId" : "6",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,External System"
    }, {
      "documentation" : { },
      "id" : "7",
      "location" : "Unspecified",
      "name" : "Policy Makers",
      "properties" : {
        "structurizr.dsl.identifier" : "policymakers"
      },
      "relationships" : [ {
        "description" : "Retrieve data on short term lets",
        "destinationId" : "13",
        "id" : "28",
        "properties" : {
          "structurizr.dsl.identifier" : "749b1051-aada-4195-8ace-de9029df4293"
        },
        "sourceId" : "7",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System,External System"
    }, {
      "description" : "Allows users to make payments",
      "documentation" : { },
      "id" : "8",
      "location" : "Unspecified",
      "name" : "GOV.UK Pay",
      "properties" : {
        "structurizr.dsl.identifier" : "govpay"
      },
      "tags" : "Element,Software System,External System"
    }, {
      "description" : "Sign in for external and Local Authority users",
      "documentation" : { },
      "id" : "9",
      "location" : "Unspecified",
      "name" : "One Login",
      "properties" : {
        "structurizr.dsl.identifier" : "onelogin"
      },
      "tags" : "Element,Software System,External System"
    }, {
      "description" : "Sends users notifications",
      "documentation" : { },
      "id" : "10",
      "location" : "Unspecified",
      "name" : "GOV.UK Notify",
      "properties" : {
        "structurizr.dsl.identifier" : "govnotify"
      },
      "tags" : "Element,Software System,External System"
    }, {
      "description" : "Sign in for administrator's users",
      "documentation" : { },
      "id" : "11",
      "location" : "Unspecified",
      "name" : "Authentication Provider",
      "properties" : {
        "structurizr.dsl.identifier" : "authprovider"
      },
      "tags" : "Element,Software System,External System"
    }, {
      "description" : "Identifies UK Addresses",
      "documentation" : { },
      "id" : "12",
      "location" : "Unspecified",
      "name" : "OS Places API",
      "properties" : {
        "structurizr.dsl.identifier" : "osplacesapi"
      },
      "tags" : "Element,Software System,External System"
    }, {
      "containers" : [ {
        "components" : [ {
          "description" : "Flow for registering and renewing registration of short-term let",
          "documentation" : { },
          "id" : "15",
          "name" : "Operator Registration",
          "properties" : {
            "structurizr.dsl.identifier" : "registrationflow"
          },
          "relationships" : [ {
            "description" : "User makes a payment",
            "destinationId" : "8",
            "id" : "40",
            "properties" : {
              "structurizr.dsl.identifier" : "9e1dc154-22cd-48f6-afdb-977d1541682b"
            },
            "sourceId" : "15",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          }, {
            "description" : "User signs into service",
            "destinationId" : "9",
            "id" : "43",
            "properties" : {
              "structurizr.dsl.identifier" : "f7d595a8-2432-4d26-bc1a-142074221068"
            },
            "sourceId" : "15",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          }, {
            "description" : "Notify user of completed application",
            "destinationId" : "10",
            "id" : "50",
            "properties" : {
              "structurizr.dsl.identifier" : "9998df67-d4bf-4209-b602-d41a156e2aad"
            },
            "sourceId" : "15",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          }, {
            "description" : "Request addresses at postcode",
            "destinationId" : "12",
            "id" : "55",
            "properties" : {
              "structurizr.dsl.identifier" : "facefa8f-1c5f-4253-b930-00459715be76"
            },
            "sourceId" : "15",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          }, {
            "description" : "Add or update registration",
            "destinationId" : "19",
            "id" : "58",
            "properties" : {
              "structurizr.dsl.identifier" : "a9464e26-422b-48eb-a2e5-7cee7aee13ad"
            },
            "sourceId" : "15",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        }, {
          "description" : "View of register for approved groups",
          "documentation" : { },
          "id" : "16",
          "name" : "Register View",
          "properties" : {
            "structurizr.dsl.identifier" : "registerview"
          },
          "relationships" : [ {
            "description" : "User signs into service",
            "destinationId" : "9",
            "id" : "46",
            "properties" : {
              "structurizr.dsl.identifier" : "89c40886-9daf-4c08-928e-85c175fc393f"
            },
            "sourceId" : "16",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          }, {
            "description" : "Retrieve information about registration",
            "destinationId" : "19",
            "id" : "59",
            "properties" : {
              "structurizr.dsl.identifier" : "7a89a784-e519-47eb-938d-b7c680914f41"
            },
            "sourceId" : "16",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        }, {
          "description" : "Service to provide administrator access to complete registration tasks.",
          "documentation" : { },
          "id" : "17",
          "name" : "Internal Service",
          "properties" : {
            "structurizr.dsl.identifier" : "internalservice"
          },
          "relationships" : [ {
            "description" : "Admin users sign into service",
            "destinationId" : "11",
            "id" : "47",
            "properties" : {
              "structurizr.dsl.identifier" : "c552f685-675b-48a6-8999-58b14a9d6bac"
            },
            "sourceId" : "17",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          }, {
            "description" : "Manage registration",
            "destinationId" : "19",
            "id" : "60",
            "properties" : {
              "structurizr.dsl.identifier" : "42cb5bb7-22f7-46ce-bd70-f825b693d707"
            },
            "sourceId" : "17",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        }, {
          "description" : "Aggregated data from register",
          "documentation" : { },
          "id" : "18",
          "name" : "Data view",
          "properties" : {
            "structurizr.dsl.identifier" : "aggregateddata"
          },
          "relationships" : [ {
            "description" : "Retrieve data about registrations",
            "destinationId" : "19",
            "id" : "61",
            "properties" : {
              "structurizr.dsl.identifier" : "407b1519-e69c-460e-a6f4-74e28c87f4ab"
            },
            "sourceId" : "18",
            "tags" : "Relationship"
          } ],
          "tags" : "Element,Component"
        }, {
          "description" : "Wrapper around register database",
          "documentation" : { },
          "id" : "19",
          "name" : "Register Adapter",
          "properties" : {
            "structurizr.dsl.identifier" : "registeradapter"
          },
          "relationships" : [ {
            "description" : "Store short term let data",
            "destinationId" : "20",
            "id" : "38",
            "properties" : {
              "structurizr.dsl.identifier" : "dd0ae9b6-f403-45c9-9412-1bf36935954d"
            },
            "sourceId" : "19",
            "tags" : "Relationship",
            "technology" : "TCP/SQL"
          }, {
            "description" : "Upload/review compliance documents",
            "destinationId" : "21",
            "id" : "53",
            "properties" : {
              "structurizr.dsl.identifier" : "0eca7c46-9ae2-4d58-8ac3-8357813d090d"
            },
            "sourceId" : "19",
            "tags" : "Relationship",
            "technology" : "HTTPS"
          } ],
          "tags" : "Element,Component"
        } ],
        "description" : "Allows people to register short term lets and provides information",
        "documentation" : { },
        "id" : "14",
        "name" : "Web Application",
        "properties" : {
          "structurizr.dsl.identifier" : "application"
        },
        "relationships" : [ {
          "description" : "Store short term let data",
          "destinationId" : "20",
          "id" : "39",
          "linkedRelationshipId" : "38",
          "sourceId" : "14",
          "technology" : "TCP/SQL"
        }, {
          "description" : "User makes a payment",
          "destinationId" : "8",
          "id" : "41",
          "linkedRelationshipId" : "40",
          "sourceId" : "14",
          "technology" : "HTTPS"
        }, {
          "description" : "User signs into service",
          "destinationId" : "9",
          "id" : "44",
          "linkedRelationshipId" : "43",
          "sourceId" : "14",
          "technology" : "HTTPS"
        }, {
          "description" : "Admin users sign into service",
          "destinationId" : "11",
          "id" : "48",
          "linkedRelationshipId" : "47",
          "sourceId" : "14",
          "technology" : "HTTPS"
        }, {
          "description" : "Notify user of completed application",
          "destinationId" : "10",
          "id" : "51",
          "linkedRelationshipId" : "50",
          "sourceId" : "14",
          "technology" : "HTTPS"
        }, {
          "description" : "Upload/review compliance documents",
          "destinationId" : "21",
          "id" : "54",
          "linkedRelationshipId" : "53",
          "sourceId" : "14",
          "technology" : "HTTPS"
        }, {
          "description" : "Request addresses at postcode",
          "destinationId" : "12",
          "id" : "56",
          "linkedRelationshipId" : "55",
          "sourceId" : "14",
          "technology" : "HTTPS"
        } ],
        "tags" : "Element,Container",
        "technology" : "Cloud Run Python/Flask"
      }, {
        "description" : "Register of short term lets",
        "documentation" : { },
        "id" : "20",
        "name" : "STL Register",
        "properties" : {
          "structurizr.dsl.identifier" : "register"
        },
        "tags" : "Element,Container,Database",
        "technology" : "Postgres"
      }, {
        "description" : "Storage for compliance documents",
        "documentation" : { },
        "id" : "21",
        "name" : "File Store",
        "properties" : {
          "structurizr.dsl.identifier" : "filestore"
        },
        "tags" : "Element,Container,Database",
        "technology" : "Cloud Storage"
      } ],
      "description" : "Platform for registering, and querying short term lets",
      "documentation" : { },
      "group" : "Short Term Lets Service",
      "id" : "13",
      "location" : "Unspecified",
      "name" : "Short Term Lets Registration",
      "properties" : {
        "structurizr.dsl.identifier" : "shorttermlets"
      },
      "relationships" : [ {
        "description" : "User makes a payment",
        "destinationId" : "8",
        "id" : "42",
        "linkedRelationshipId" : "40",
        "sourceId" : "13",
        "technology" : "HTTPS"
      }, {
        "description" : "User signs into service",
        "destinationId" : "9",
        "id" : "45",
        "linkedRelationshipId" : "43",
        "sourceId" : "13",
        "technology" : "HTTPS"
      }, {
        "description" : "Admin users sign into service",
        "destinationId" : "11",
        "id" : "49",
        "linkedRelationshipId" : "47",
        "sourceId" : "13",
        "technology" : "HTTPS"
      }, {
        "description" : "Notify user of completed application",
        "destinationId" : "10",
        "id" : "52",
        "linkedRelationshipId" : "50",
        "sourceId" : "13",
        "technology" : "HTTPS"
      }, {
        "description" : "Request addresses at postcode",
        "destinationId" : "12",
        "id" : "57",
        "linkedRelationshipId" : "55",
        "sourceId" : "13",
        "technology" : "HTTPS"
      } ],
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Short Term Lets Registration",
  "properties" : {
    "structurizr.dsl" : ""
  },
  "views" : {
    "componentViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "containerId" : "14",
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "12",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "15",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "16",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "17",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "18",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "19",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "20",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "21",
        "x" : 0,
        "y" : 0
      } ],
      "externalContainerBoundariesVisible" : false,
      "key" : "Components",
      "order" : 3,
      "relationships" : [ {
        "id" : "29"
      }, {
        "id" : "32"
      }, {
        "id" : "35"
      }, {
        "id" : "38"
      }, {
        "id" : "40"
      }, {
        "id" : "43"
      }, {
        "id" : "46"
      }, {
        "id" : "47"
      }, {
        "id" : "50"
      }, {
        "id" : "53"
      }, {
        "id" : "55"
      }, {
        "id" : "58"
      }, {
        "id" : "59"
      }, {
        "id" : "60"
      }, {
        "id" : "61"
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "properties" : {
        "structurizr.style.colors.primary" : "#485fc7",
        "structurizr.style.logo.path" : "site/logo.jpg",
        "structurizr.style.colors.secondary" : "#ffffff",
        "c4plantuml.elementProperties" : "true"
      },
      "styles" : {
        "elements" : [ {
          "background" : "#999999",
          "color" : "#ffffff",
          "fontSize" : 22,
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "background" : "#1168bd",
          "color" : "#ffffff",
          "tag" : "Software System"
        }, {
          "background" : "#999999",
          "color" : "#ffffff",
          "tag" : "External System"
        }, {
          "background" : "#438dd5",
          "color" : "#ffffff",
          "tag" : "Container"
        }, {
          "shape" : "WebBrowser",
          "tag" : "Web Browser"
        }, {
          "shape" : "MobileDeviceLandscape",
          "tag" : "Mobile App"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#85bbf0",
          "color" : "#000000",
          "tag" : "Component"
        }, {
          "opacity" : 25,
          "tag" : "Failover"
        } ]
      },
      "terminology" : { }
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "12",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "14",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "20",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "21",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "Containers",
      "order" : 2,
      "relationships" : [ {
        "id" : "30"
      }, {
        "id" : "33"
      }, {
        "id" : "36"
      }, {
        "id" : "39"
      }, {
        "id" : "41"
      }, {
        "id" : "44"
      }, {
        "id" : "48"
      }, {
        "id" : "51"
      }, {
        "id" : "54"
      }, {
        "id" : "56"
      } ],
      "softwareSystemId" : "13"
    } ],
    "dynamicViews" : [ {
      "elements" : [ {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "13",
        "x" : 0,
        "y" : 0
      } ],
      "externalBoundariesVisible" : false,
      "key" : "BookingPlatformValidatingRegistration",
      "order" : 5,
      "relationships" : [ {
        "description" : "Registers property as a short term let",
        "id" : "31",
        "order" : "1",
        "response" : false
      }, {
        "description" : "Lists property on platform",
        "id" : "23",
        "order" : "2",
        "response" : false
      }, {
        "description" : "Sends registration number and property address",
        "id" : "26",
        "order" : "3",
        "response" : false
      }, {
        "description" : "Confirms the registration number is valid",
        "id" : "26",
        "order" : "4",
        "response" : true
      } ],
      "title" : "Possible pattern for Booking Platform validating registration"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "12",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "13",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "generatedKey" : true,
      "key" : "SystemContext-001",
      "order" : 1,
      "relationships" : [ {
        "id" : "22"
      }, {
        "id" : "23"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      }, {
        "id" : "26"
      }, {
        "id" : "27"
      }, {
        "id" : "28"
      }, {
        "id" : "31"
      }, {
        "id" : "34"
      }, {
        "id" : "37"
      }, {
        "id" : "42"
      }, {
        "id" : "45"
      }, {
        "id" : "49"
      }, {
        "id" : "52"
      }, {
        "id" : "57"
      } ],
      "softwareSystemId" : "13"
    } ],
    "systemLandscapeViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "13",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "wholeProblem",
      "order" : 4,
      "relationships" : [ {
        "id" : "23"
      }, {
        "id" : "26"
      }, {
        "id" : "27"
      }, {
        "id" : "31"
      }, {
        "id" : "37"
      }, {
        "id" : "42"
      }, {
        "id" : "45"
      } ],
      "title" : "Solving a whole problem for users"
    } ]
  }
}